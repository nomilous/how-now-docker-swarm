const PORT = 8080;
const http = require('http');

const kue = require('kue');
const queue = kue.createQueue({
  redis: {
    host: 'swarm-redis'
  }
});

http.createServer(function(req, res) {

  /*
   * post "request" job onto queue
   *
   * - `enqueue` the job is now queued
   * - `promotion` the job is promoted from delayed state to queued
   * - `progress` the job's progress ranging from 0-100
   * - `failed attempt` the job has failed, but has remaining attempts yet
   * - `failed` the job has failed and has no remaining attempts
   * - `complete` the job has completed
   * - `remove` the job has been removed
   *
   */

  var m, queueName = 'request';
  if (m = req.url.match(/\/enqueue\/(.*?)\//)) {
    queueName = m[1];
  }

  var job = queue.create(queueName, {
    url: req.url
  })

  .on('enqueue', function() {
    console.log('enqueued', arguments);
  })

  .on('promotion', function() {
    console.log('promotion', arguments);
  })

  .on('remove', function() {
    console.log('remove', arguments);
  })

  .on('complete', function(result){
    console.log('Job completed with data ', result);
    res.end(JSON.stringify(result, null, 2));
  })

  .on('failed attempt', function(errorMessage, doneAttempts){
    console.log('Job failed');
  })

  .on('failed', function(errorMessage){
    console.log('Job failed');
    res.statusCode = 500;
    res.statusMessage = errorMessage.toString();
    res.end();
  })

  .on('progress', function(progress, data){
    console.log('\r  job #' + job.id + ' ' + progress + '% complete with data ', data);
  })

  .save();

}).listen(PORT);

console.log('listen at ' + PORT);
